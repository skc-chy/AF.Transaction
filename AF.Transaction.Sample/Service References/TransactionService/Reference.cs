//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AF.Transaction.Sample.TransactionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionService.IWCFTransactionDemo")]
    public interface IWCFTransactionDemo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTransactionDemo/AddEmployee", ReplyAction="http://tempuri.org/IWCFTransactionDemo/AddEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AF.Transaction.Common.Result), Action="http://tempuri.org/IWCFTransactionDemo/AddEmployeeResultFault", Name="Result", Namespace="http://schemas.datacontract.org/2004/07/AF.Transaction.Common")]
        AF.Transaction.Common.Result AddEmployee(AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTransactionDemo/AddEmployee", ReplyAction="http://tempuri.org/IWCFTransactionDemo/AddEmployeeResponse")]
        System.Threading.Tasks.Task<AF.Transaction.Common.Result> AddEmployeeAsync(AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTransactionDemo/UpdateEmployee", ReplyAction="http://tempuri.org/IWCFTransactionDemo/UpdateEmployeeResponse")]
        AF.Transaction.Common.Result UpdateEmployee(AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTransactionDemo/UpdateEmployee", ReplyAction="http://tempuri.org/IWCFTransactionDemo/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<AF.Transaction.Common.Result> UpdateEmployeeAsync(AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTransactionDemo/DeleteEmployee", ReplyAction="http://tempuri.org/IWCFTransactionDemo/DeleteEmployeeResponse")]
        AF.Transaction.Common.Result DeleteEmployee(System.Guid empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTransactionDemo/DeleteEmployee", ReplyAction="http://tempuri.org/IWCFTransactionDemo/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<AF.Transaction.Common.Result> DeleteEmployeeAsync(System.Guid empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTransactionDemo/GetEmployeeList", ReplyAction="http://tempuri.org/IWCFTransactionDemo/GetEmployeeListResponse")]
        AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity[] GetEmployeeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTransactionDemo/GetEmployeeList", ReplyAction="http://tempuri.org/IWCFTransactionDemo/GetEmployeeListResponse")]
        System.Threading.Tasks.Task<AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity[]> GetEmployeeListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFTransactionDemoChannel : AF.Transaction.Sample.TransactionService.IWCFTransactionDemo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFTransactionDemoClient : System.ServiceModel.ClientBase<AF.Transaction.Sample.TransactionService.IWCFTransactionDemo>, AF.Transaction.Sample.TransactionService.IWCFTransactionDemo {
        
        public WCFTransactionDemoClient() {
        }
        
        public WCFTransactionDemoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFTransactionDemoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFTransactionDemoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFTransactionDemoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AF.Transaction.Common.Result AddEmployee(AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity employeeData) {
            return base.Channel.AddEmployee(employeeData);
        }
        
        public System.Threading.Tasks.Task<AF.Transaction.Common.Result> AddEmployeeAsync(AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity employeeData) {
            return base.Channel.AddEmployeeAsync(employeeData);
        }
        
        public AF.Transaction.Common.Result UpdateEmployee(AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity employeeData) {
            return base.Channel.UpdateEmployee(employeeData);
        }
        
        public System.Threading.Tasks.Task<AF.Transaction.Common.Result> UpdateEmployeeAsync(AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity employeeData) {
            return base.Channel.UpdateEmployeeAsync(employeeData);
        }
        
        public AF.Transaction.Common.Result DeleteEmployee(System.Guid empID) {
            return base.Channel.DeleteEmployee(empID);
        }
        
        public System.Threading.Tasks.Task<AF.Transaction.Common.Result> DeleteEmployeeAsync(System.Guid empID) {
            return base.Channel.DeleteEmployeeAsync(empID);
        }
        
        public AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity[] GetEmployeeList() {
            return base.Channel.GetEmployeeList();
        }
        
        public System.Threading.Tasks.Task<AF.Transaction.Entity.WCFTransactionDemo.WCFTransactionEntity[]> GetEmployeeListAsync() {
            return base.Channel.GetEmployeeListAsync();
        }
    }
}
